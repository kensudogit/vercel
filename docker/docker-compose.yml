version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    build:
      context: .
      dockerfile: docker/Dockerfile.postgres
    container_name: vercel-postgres
    environment:
      POSTGRES_DB: vercel_db
      POSTGRES_USER: vercel_user
      POSTGRES_PASSWORD: vercel_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - vercel-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vercel_user -d vercel_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Eureka Server
  eureka-server:
    build:
      context: .
      dockerfile: docker/Dockerfile.eureka
    container_name: vercel-eureka-server
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - vercel-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # User Service
  user-service:
    build:
      context: .
      dockerfile: docker/Dockerfile.java-service
    container_name: vercel-user-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/user_db
      SPRING_DATASOURCE_USERNAME: user_db_user
      SPRING_DATASOURCE_PASSWORD: user_db_password
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
    networks:
      - vercel-network
    depends_on:
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Product Service
  product-service:
    build:
      context: .
      dockerfile: docker/Dockerfile.java-service
    container_name: vercel-product-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/product_db
      SPRING_DATASOURCE_USERNAME: product_db_user
      SPRING_DATASOURCE_PASSWORD: product_db_password
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
    networks:
      - vercel-network
    depends_on:
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: docker/Dockerfile.java-service
    container_name: vercel-api-gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
    networks:
      - vercel-network
    depends_on:
      eureka-server:
        condition: service_healthy
      user-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:

networks:
  vercel-network:
    driver: bridge
